name: Loomvale Sheet Bot
on:
  workflow_dispatch:
  schedule:
    - cron: '0 9 */2 * *'
# --- header normalization helpers (drop punctuation, lower) ---
import re
def _norm(s: str) -> str:
    return re.sub(r"[^a-z0-9]+", "", (s or "").lower())

# Canonical header keys we need (Aâ†’I)
CANONICAL_HEADERS = {
    "status": "Status",
    "topic": "Topic",
    "imagesource": "ImageSource",
    "sourcelinks": "SourceLinks",
    "imageprompt_ambience": "ImagePrompt_Ambience",
    "imageprompt_scenes": "ImagePrompt_Scenes",
    "tone": "Tone",
    "captionhashtagsprompt": "Caption+Hashtags Prompt",
    "assistant": "Assistant",
}

def header_map(ws):
    headers = [h.strip() for h in ws.row_values(1)]
    norm_to_index = {_norm(h): i+1 for i, h in enumerate(headers)}

    mapping = {}
    for k, canon in CANONICAL_HEADERS.items():
        nk = _norm(canon)
        if nk not in norm_to_index:
            # try some common variants
            aliases = {
                "captionhashtagsprompt": ["captionhashtags", "captionprompthashtags", "captionandhashtags", "caption_hashtags_prompt"],
                "imageprompt_scenes": ["imageprompts_scenes", "imagepromptscenes"],
                "imageprompt_ambience": ["imagepromptambience", "ambience", "imageprompt_a"],
                "sourcelinks": ["links", "sourcelinksimages"],
            }.get(k, [])
            found = None
            for alias in [nk] + aliases:
                if alias in norm_to_index:
                    found = alias
                    break
            if not found:
                raise RuntimeError(f"Missing header: '{canon}'. Found: {headers}")
            mapping[k] = norm_to_index[found]
        else:
            mapping[k] = norm_to_index[nk]
    return mapping
